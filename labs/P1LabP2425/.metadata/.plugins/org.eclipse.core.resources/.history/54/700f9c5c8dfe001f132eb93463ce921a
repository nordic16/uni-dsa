package types;

import java.util.Arrays;

/**
 * 
 */
public class Code{
	private Colour[] code;

	/**
	 * 
	 * @param code
	 */
	public Code(Colour[] code) {
		this.code = code;
	}

	/**
	 * 
	 * @return
	 */
	public Colour[] getCode() {
		return code;
	}

	/**
	 * 
	 * @return
	 */
	public Code copy() {
		return new Code(this.code.clone()); // this is NECESSARY.
	}

	/**
	 * 
	 * @return
	 */
	public int getLength() {
		return this.code.length;
	}

	/**
	 * 
	 * @param other
	 * @return
	 */
	public int[] howManyCorrect(Code other) {
		Colour[] foundColors = new Colour[this.getLength()];
		int a = 0, b = 0, c = 0;
		
		for (int i = 0; i < other.getLength(); i++) {
			if (!isPresent(foundColors, other.code[i])) {
				foundColors[c++] = other.code[i];
			}
			
			if (this.code[i] == other.code[i]) {
				a++;
			
			} else if (!isPresent(foundColors, other.code[i]) && isPresent(other.code, this.code[i])) {  // if colour isn't present yet, increase b.
				foundColors[c++] = other.code[i];
			}
		}	
		return new int[] {a, b};
	}

	/**
	 * 
	 * @param other
	 * @return
	 */
	public boolean equalCodes(Code other) {
		return this.toString().equals(other.toString());
	}


	@Override
	public String toString() {
		return Arrays.toString(this.code);
	}
	
	private boolean isPresent(Colour[] arr, Colour val) {
		for (Colour col : arr) {
			if (col == val) {
				return true;
			}
		}
		return false;
	}

}
